name: Deploy Blog

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --only=main --no-root
    
    - name: Install test dependencies
      run: pip install requests
    
    - name: Validate posts
      run: |
        echo "Validating markdown files..."
        find posts -name "*.md" -exec poetry run python -c "import frontmatter; frontmatter.load(open('{}'))" \;
    
    - name: Build site
      run: poetry run python buildblog.py
    
    - name: Validate build
      run: |
        test -f docs/index.html || exit 1
        test -f docs/sitemap.xml || exit 1
        test -f docs/feed.xml || exit 1
        echo "Build validation passed"
    
    - name: Setup Pages
      uses: actions/configure-pages@v5
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Test deployed site
      run: |
        sleep 30  # Wait for deployment
        python test_site.py